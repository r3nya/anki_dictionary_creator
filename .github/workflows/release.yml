name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build Release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --verbose

      - name: Get Version
        id: get_version
        run: |
          echo VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            Changes in this Release:
            ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/anki_dictionary_creator
          asset_name: anki_dictionary_creator-${{ steps.get_version.outputs.VERSION }}-linux-x86_64
          asset_content_type: application/octet-stream
